<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:ws="http://jax-ws.dev.java.net/spring/core"
	xmlns:wss="http://jax-ws.dev.java.net/spring/servlet"
	xmlns:pen="http://www.pentaho.com/schema/pentaho-system"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
                           http://jax-ws.dev.java.net/spring/core http://jax-ws.dev.java.net/spring/core.xsd
                           http://jax-ws.dev.java.net/spring/servlet http://jax-ws.dev.java.net/spring/servlet.xsd
                           http://www.pentaho.com/schema/pentaho-system http://www.pentaho.com/schema/pentaho-system.xsd">

  <context:annotation-config />

  <!-- uncomment for direct jersey services -->
  <!-- bean id="jaxrsPluginServlet" class="org.pentaho.plugin.j2ee.JAXRSPluginServlet" /-->
  
  <context:annotation-config />

  <bean id="api" class="org.saiku.plugin.resources.ExtendedJAXRSPluginServlet"/>

<bean id="contentAccessFactory" scope="prototype" class="pt.webdetails.cpf.PentahoPluginEnvironment" />

	<bean id="userServiceBean" class="org.saiku.service.user.UserService">
		<property name="datasourceService" ref="datasourceServiceBean"/>
		<property name="iDatasourceManager" ref="pentahoDsManager"/>
		<property name="adminRoles">
			<list>
				<value>Administrator</value>
			</list>
		</property>
		<property name="sessionService" ref="sessionService"/>
	</bean>

	<bean id="pentahoDsManager" class="org.saiku.plugin.PentahoDatasourceManager">
		<property name="datasourceResolverClass" value="org.saiku.plugin.PentahoDataSourceResolver" />
		<!-- <property name="dynamicSchemaProcessor" value="mondrian.i18n.LocalizingDynamicSchemaProcessor" /> -->
	</bean>

	<bean id="connectionManager" class="org.saiku.plugin.PentahoSecurityAwareConnectionManager">
		<property name="dataSourceManager" ref="pentahoDsManager" />
		<property name="userAware" value="false" />
		<property name="connectionPooling" value="true" />
	</bean>

	<bean id="datasourceServiceBean" class="org.saiku.service.datasource.DatasourceService">
		<property name="connectionManager" ref="connectionManager" />
	</bean>

	<bean id="olapDiscoverServiceBean" class="org.saiku.service.olap.OlapDiscoverService">
		<property name="datasourceService" ref="datasourceServiceBean" />
	</bean>

	<bean id="olapQueryBean" class="org.saiku.service.olap.OlapQueryService">
		<property name="olapDiscoverService" ref="olapDiscoverServiceBean" />
	</bean>

	<bean id="thinQueryBean" class="org.saiku.service.olap.ThinQueryService">
		<property name="olapDiscoverService" ref="olapDiscoverServiceBean" />
	</bean>


	<bean id="olapDiscoverBean" class="org.saiku.plugin.resources.PentahoDiscoverResource">
		<property name="olapDiscoverService" ref="olapDiscoverServiceBean" />
	</bean>


	<bean id="queryResource" class="org.saiku.plugin.resources.PentahoQueryResource">
		<property name="thinQueryService" ref="thinQueryBean" />
        <property name="repository" ref="repositoryBean2"/>
		<property name="userService" ref="userServiceBean"/>
	</bean>
	
	<bean id="sessionService" class="org.saiku.plugin.PentahoSessionServiceSeven">
		<property name="userService" ref="userServiceBean"/>
		<property name="l" ref="licenseUtilsBeanPlugin"/>
	</bean>

    <bean id="sessionResource" class="org.saiku.plugin.resources.PentahoSessionResource">
    		<property name="sessionService" ref="sessionService" />
	</bean>

  	<bean id="repositoryBean2" class="org.saiku.plugin.resources.PentahoRepositoryResource2">
		<property name="userService" ref="userServiceBean"/>
	</bean>


  	 <bean id="filterRepositoryBean" class="org.saiku.plugin.resources.PentahoFilterRepositoryResource">
		<property name="olapQueryService" ref="olapQueryBean" />
		<property name="sessionService" ref="sessionService" />
		<property name="path" value="saiku-repository"/>
	</bean>
	
	<bean id="pluginResource" class="org.saiku.plugin.resources.PluginResource" />
	
	<bean id="exporterBean" class="org.saiku.plugin.resources.PentahoExporterResource">
   		<property name="repository" ref="repositoryBean2" />
		<property name="query2Resource" ref="queryResource" />
	</bean>
	
	
  <bean id="saiku.editor" class="org.pentaho.platform.plugin.services.webservices.content.PluginFileContentGenerator" scope="prototype">
    <property name="mimeType" value="text/html" />
    <property name="relativeFilePath" value="ui/forward.html" />
    <property name="pluginId" value="saiku" />
  </bean> 

	
    <bean id="saiku.run" class="org.pentaho.platform.plugin.services.webservices.content.PluginFileContentGenerator" scope="prototype">
        <property name="mimeType" value="text/html" />
        <property name="relativeFilePath" value="ui/forward.html" />
        <property name="pluginId" value="saiku" />
    </bean>
    
    <bean id="saiku" class="org.pentaho.platform.plugin.services.webservices.content.PluginFileContentGenerator" scope="prototype">
        <property name="mimeType" value="text/html" />
        <property name="relativeFilePath" value="ui/forward.html" />
        <property name="pluginId" value="saiku" />
    </bean>

    
  <bean class="org.pentaho.platform.engine.core.solution.ContentInfo">
	<property name="mimeType" value="text/xml"/>	
	<property name="extension" value=".saiku"/>	
	<property name="canImport" value="true"/>
	<property name="canExport" value="true"/>		
	<pen:publish as-type="INTERFACES"/>
  </bean>



	<bean id="repositoryDsManager" class="org.saiku.plugin.PentahoRepositoryResource"/>

	<bean id="licenseUtilsBeanPlugin" class="org.saiku.plugin.LicenseUtils" init-method="init">
		<property name="repositoryDatasourceManager" ref="repositoryDsManager"/>
	</bean>

	<bean id="licenseBean" class="org.saiku.plugin.resources.PentahoLicenseResource">
		<property name="licenseUtils" ref="licenseUtilsBeanPlugin"/>
		<property name="userService" ref="userServiceBean"/>
	</bean>


	<bean id="startupBean" scope="singleton" class="org.saiku.web.rest.util.StartupResource"  init-method="init"  />
	
</beans>
